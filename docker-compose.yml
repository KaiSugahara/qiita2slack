version: '3'

services:

  app-fasttext:
    build:
      context: .
      dockerfile: ./docker/app-fasttext/Dockerfile
    container_name: app-fasttext
    volumes:
      - ./app-fasttext:/app:ro
      - ./data:/data
    restart: always
    networks:
      - fasttext-api-network

  app-search-items:
    build:
      context: .
      dockerfile: ./docker/app-search-items/Dockerfile
    container_name: app-search-items
    volumes:
      - ./app-search-items:/app:ro
      - ./data:/data
    restart: always
    environment:
      VIRTUAL_HOST: qiita4you.fulfills.jp
      LETSENCRYPT_HOST: qiita4you.fulfills.jp
      LETSENCRYPT_EMAIL: web@ksugahara.com
    networks:
      - fasttext-api-network
      - nginx-proxy-network
    depends_on:
      - app-fasttext

  app-get-items:
    build:
      context: .
      dockerfile: ./docker/app-get-items/Dockerfile
    container_name: app-get-items
    volumes:
      - ./app-get-items:/app:ro
      - ./data:/data
    restart: always
    networks:
      - fasttext-api-network
    depends_on:
      - app-fasttext

  app-test:
    build:
      context: .
      dockerfile: ./docker/app-test/Dockerfile
      args:
        - YOUR_UID=1002
        - YOUR_GID=1002
        - CONTAINER_USER_NAME=user
    container_name: app-test
    ports:
      - '22000:8888'
    volumes:
      - ./app-test:/app
      - ./data:/data
    networks:
      - fasttext-api-network
    depends_on:
      - app-fasttext

  nginx-proxy:
    image: jwilder/nginx-proxy:latest
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    networks:
      - nginx-proxy-network

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    container_name: nginx-letsencrypt
    depends_on: 
        - nginx-proxy
    volumes:
      - ./certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx-proxy
    restart: always
    networks:
      - nginx-proxy-network

networks:
  fasttext-api-network:
  nginx-proxy-network: